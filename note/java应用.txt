shutDown()

    当线程池调用该方法时,线程池的状态则立刻变成SHUTDOWN状态。此时，则不能再往线程池中添加任何任务，否则将会抛出RejectedExecutionException异常。但是，此时线程池不会立刻退出，直到添加到线程池中的任务都已经处理完成，才会退出。

shutdownNow()

     根据JDK文档描述，大致意思是：执行该方法，线程池的状态立刻变成STOP状态，并试图停止所有正在执行的线程，不再处理还在池队列中等待的任务，当然，它会返回那些未执行的任务。
     它试图终止线程的方法是通过调用Thread.interrupt()方法来实现的，但是大家知道，这种方法的作用有限，如果线程中没有sleep 、wait、Condition、定时锁等应用, interrupt()方法是无法中断当前的线程的。所以，ShutdownNow()并不代表线程池就一定立即就能退出，它可能必须要等待所有正在执行的任务都执行完成了才能退出。

	 
	 
	 
TreeMap
	Comparator
	Comparable
LinkedHashMap
	顺序访问
	在每个节点加入两个指针
	双向链表
HashMap
	ContainsKey
		if (e.hash == hash &&
                        ((k = e.key) == key || (key != null && key.equals(k))))
                        return e;
	先比较哈希码 在比较引用和equals方法
	ContainsValue
		if ((v = e.value) == value ||
                        (value != null && value.equals(v)))
                        return true;
	先比较引用，再比较equals方法
	capacity table数组的长度
	size  table数组实际存储的元素数量
	threshold 当size>threshold的时候进行resize扩容 threshold=capacity*loadFactory
	loadFactory装载因子 用来衡量table数组满的程度，size/capacity为实时转载因子，默认为0.75
	DEFAULT_INITIAL_CAPACITY	初始化table数组长度16
	MAXIMUM_CAPACITY	table数组的最大长度2^30
	DEFAULT_LOAD_FACTOR		默认装载因子0.75
	TREEIFY_THRESHOLD	默认的树化的阈值8
	UNTREEIFY_THRESHOLD		resize后树变为链表的阈值
		if (hc <= UNTREEIFY_THRESHOLD)
                    tab[index + bit] = hiHead.untreeify(map);
                else {
                    tab[index + bit] = hiHead;
                    if (loHead != null)
                        hiHead.treeify(tab);
                }
	MIN_TREEIFY_CAPACITY	树化时的最小capacity容量，如果一个桶中的bin大于TREEIFY_THRESHOLD默认树化阈值8的时候，如果table数组的capacity小于MIN_TREEIFY_CAPACITY
							则会进行扩容，当capacity>MIN_TREEIFY_CAPACITY的时候才进行树化
							
							
							
							
java分析工具
jinfo -flag MaxHeapSize pid

jinfo -flags pid

jstat -gc 13744

java的getProperties和getEnv
前者是获取Java的系统变量
后者是获取操作系统的变量,比如path变量
