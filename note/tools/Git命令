git中的remoteName同意命名为fcy
git中远程建三个分支  master  release develop
git中本地建一个分支  wind

git中的origin的意思      远程仓库在本地的别名
git remote查看当前远程仓库
git remote add test git://github.com/wingrai/test.git添加远程仓库
git remote rename oldName newName       远程仓库重命名
git remote rm label                     删除远程仓库
git remote show label
    * remote remoteName
      Fetch URL: https://github.com/windrai/pratice.git
      Push  URL: https://github.com/windrai/pratice.git
      HEAD branch: master
      Remote branch:
        master tracked
      Local branch configured for 'git pull':使用git pull 缺省pull
        fcy merges with remote master
      Local ref configured for 'git push':使用git push 缺省提交
        master pushes to master (fast-forwardable)

git config --list查看配置信息
git config --global user.name "name"配置用户名
git config --global user.email 807715333@qq.com配置邮箱
git config --global -l                  显示全局配置信息
git config --system -l                  显示系统配置信息
git config --local -l                   显示本地配置信息

git branch -m old new                   本地分支重命名
git branch branchName                   创建本地分支
git push label localName:remoteName     提交本地分支到远程分支
git add .                               将本地所有代码加入到暂存区
git checkout .                          取消所有本地变更
git commit -m 'msg'                     提交到本地
git branch -a                           列出所有分支
git checkout branchName                 切换分支
git push origin localName:remoteName	提交本地分支到原创分支
git fetch origin master:br3				将远程的master分支拉下来并在本地创建br3分支
git merge br3							将br3分支与本地分支合并(最新的是br3分支)
git merge br3 -s theirs
git diff br3    						查看当前分支与br3分支有何不同
git diff branchName branchName          比较两个分支有何不同
git branch -d br3						删除本地br3分支
git branch -D br3                       强制删除b

git add remote label address            添加远程仓库路径并命名为label
git push origin --delete branchName     删除远程分支
git push origin localName:newName       创建远程分支
git push --set-upstream originName localName:remoteNamegit
git push                                如果没指定originName则会在远程仓库创建一个和本地分支同名的分支

HEAD远程指针?
git remote set-head origin master        将HEAD指针指向master分支
git remote set-head origin -d            删除这个指针
git的upstream                            当前分支与远程分支的关联
git branch -u fcy/master                将当前分支的upstream指定为远程的master分支
查看upstream?
    git remote show fcy
    cat .git/config
例如要把push和pull的默认分支设置为dev，那么：git branch --set-upstream-to=origin/dev dev
git config --global push.default "current"   还可以设置为upstream
git branch -vv                            查看当前分支的upstream

git回退
    撤销暂存区内容
    撤销修改了的文件
    回退到之前提交的某个版本
本地分支是最新的
git commit后执行了git reset --hard HEAD~1回退到了上一个版本
此时本地最新的代码丢失了
可以通过git reflog查看历史操作系统
然后通过git reset --hard versionID回退到最新的代码那次提交

git有三个区域
工作区
暂存区
历史版本

我们是修改工作区的文件
然后执行git add .后将其变更的文件加入到了暂存区
然后执行git commit后将所有变更的文件加入到了实力版本  此时就是一个版本的快照

执行git reset --hard versionId后重置HEAD指针并清空暂存区和工作区
执行git reset --soft versionID后重置HEAD指针并保留暂存区和工作区
执行git reset --mixed versionID后重置HEAD指针并清空暂存区保留工作区(默认选项)

git diff 命令
暂存区     工作区     历史版本    某个历史版本      某两次提交   远程某个版本
可比较上面某两个的差别

git reset和git revert
git reset是通过移动HEAD指针并删除落后的分支 向前移动
git revert是通过新建要给新的分支           向后移动